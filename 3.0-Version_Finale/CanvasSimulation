import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;

public class CanvasSimulation extends Canvas{
	Flotte flotte;
	private BufferedImage imgPepper;
	private BufferedImage imgNao;
	private BufferedImage imgRobotino;
	private BufferedImage imgPekee;
	private BufferedImage imgQlc;
	private BufferedImage imgAnar;
	private BufferedImage imgBaptiste;
	private BufferedImage imgClement;
	private BufferedImage imgFred;
	private BufferedImage imgJehan;
	private BufferedImage imgLucile;
	private BufferedImage imgMathieu;
	private BufferedImage imgMaxence;
	private BufferedImage imgMaxime;
	private BufferedImage imgQuentin;
	private BufferedImage imgVernier;
	private BufferedImage imgMonnet;
	private BufferedImage imgCimpan;
	
	public CanvasSimulation(Flotte flotte) {
		this.flotte=flotte;
		try {
			imgPepper 	= ImageIO.read(new File("imgPepper.jpg"));
			imgNao 		= ImageIO.read(new File("imgNao.jpg"));
			imgRobotino	= ImageIO.read(new File("imgRobotino.jpg"));
			imgPekee	= ImageIO.read(new File("imgPekee.jpg"));
			imgQlc		= ImageIO.read(new File("imgQuelconque.jpg"));
			imgAnar		= ImageIO.read(new File("imgAnar.jpg"));
			imgBaptiste	= ImageIO.read(new File("imgBaptiste.jpg"));
			imgClement	= ImageIO.read(new File("imgClement.jpg"));
			imgFred		= ImageIO.read(new File("imgFred.jpg"));
			imgJehan	= ImageIO.read(new File("imgJehan.jpg"));
			imgLucile	= ImageIO.read(new File("imgLucile.jpg"));
			imgMathieu	= ImageIO.read(new File("imgMathieu.jpg"));
			imgMaxence	= ImageIO.read(new File("imgMaxence.jpg"));
			imgMaxime	= ImageIO.read(new File("imgMaxime.jpg"));
			imgQuentin	= ImageIO.read(new File("imgQuentin.jpg"));
			imgVernier	= ImageIO.read(new File("imgVernier.jpg"));
			imgMonnet	= ImageIO.read(new File("imgMonnet.png"));
			imgCimpan	= ImageIO.read(new File("imgCimpan.jpg"));
			
		} catch (IOException ex) {
			ex.printStackTrace();
		}
	}

	public void paint(Graphics  g) {
		g.setColor(Color.black);
		g.drawLine(0, 0, 0, 599);g.drawLine(1199, 0, 1199, 599);g.drawLine(0, 0, 1199, 0);g.drawLine(0, 599, 1199, 599);
		for (int i=0;i<60;i++) {
			g.drawLine(20*i, 0, 20*i, 5);
		}
		for (int i=0;i<30;i++) {
			g.drawLine(0, 20*i, 5, 20*i);
		}
		for(int i=0;i<flotte.tailleFlotte();i++) {
			Robot robSel=flotte.contenuFlotte(i);
			float teta =(float)(robSel.getAngle()*Math.PI/180);
			Graphics2D g2d = (Graphics2D) g;
			if (robSel.getNom().equals("Pepper")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgPepper, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Nao")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgNao, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Robotino")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgRobotino, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Pekee")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgPekee, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Anar")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgAnar, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Baptiste")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgBaptiste, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Clement")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgClement, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Fred")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgFred, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Jehan")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgJehan, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Lucile")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgLucile, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Mathieu")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgMathieu, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Maxence")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgMaxence, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Maxime")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgMaxime, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Quentin")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgQuentin, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Vernier")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgVernier, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Monnet")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgMonnet, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else if (robSel.getNom().equals("Cimpan")) {
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgCimpan, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
			else {				
				g2d.rotate(-teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));
				g2d.drawImage(imgQlc, (int)robSel.getPosx(), (int)robSel.getPosy(), this);
				g2d.rotate(teta,(int)(robSel.getPosx()+20),(int)(robSel.getPosy()+20));}
		}

	}
}
